declare const configs: {
    recommended: {
        rules: {
            'bot-whatsapp/func-prefix-goto-flow-return': number;
            'bot-whatsapp/func-prefix-end-flow-return': number;
            'bot-whatsapp/func-prefix-dynamic-flow-await': number;
            'bot-whatsapp/func-prefix-state-update-await': number;
            'bot-whatsapp/func-prefix-fall-back-return': number;
            'bot-whatsapp/func-prefix-endflow-flowdynamic': number;
        };
    };
};
declare const rules: {
    'func-prefix-goto-flow-return': {
        meta: {
            fixable: string;
        };
        create: (context: import("./types").Context) => {
            'CallExpression[callee.name="gotoFlow"]'(node: import("./types").INode): void;
        };
    };
    'func-prefix-fall-back-return': {
        meta: {
            fixable: string;
        };
        create: (context: import("./types").Context) => {
            'CallExpression[callee.name="fallBack"]'(node: import("./types").INode): void;
        };
    };
    'func-prefix-end-flow-return': {
        meta: {
            fixable: string;
        };
        create: (context: import("./types").Context) => {
            'CallExpression[callee.name="endFlow"]'(node: import("./types").INode): void;
        };
    };
    'func-prefix-dynamic-flow-await': {
        meta: {
            fixable: string;
        };
        create: (context: import("./types").Context) => {
            'CallExpression[callee.name="flowDynamic"]'(node: import("./types").INode): void;
        };
    };
    'func-prefix-state-update-await': {
        meta: {
            fixable: string;
        };
        create: (context: any) => {
            'MemberExpression[property.name="update"]'(node: any): void;
        };
    };
    'func-prefix-endflow-flowdynamic': {
        meta: {
            fixable: string;
        };
        create: (context: import("./types").Context) => {
            'CallExpression[callee.name="endFlow"]'(node: import("./types").INode): void;
        };
    };
};
export { rules, configs };
//# sourceMappingURL=index.d.ts.map